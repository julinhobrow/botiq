import base64, codecs
magic = 'ZnJvbSBpcW9wdGlvbmFwaS5zdGFibGVfYXBpIGltcG9ydCBJUV9PcHRpb24KZnJvbSBkYXRldGltZSBpbXBvcnQgZGF0ZXRpbWUKZnJvbSBkYXRldXRpbCBpbXBvcnQgdHoKZnJvbSBnZXRwYXNzIGltcG9ydCBnZXRwYXNzCmltcG9ydCB3YXJuaW5ncwppbXBvcnQgdGltZQppbXBvcnQganNvbiwgcmVxdWVzdHMKaW1wb3J0IGxvZ2dpbmcKaW1wb3J0IGNvbmZpZ3BhcnNlcgpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKaW1wb3J0IHN5cwppbXBvcnQgb3MKZnJvbSB0aHJlYWRpbmcgaW1wb3J0IFRocmVhZCwgTG9jawpsb2NrID0gTG9jaygpCndhcm5pbmdzLmZpbHRlcndhcm5pbmdzKCJpZ25vcmUiLCBjYXRlZ29yeT1Vc2VyV2FybmluZykKCiIiInBhID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCmFycXVpdm8gPSBjb25maWdwYXJzZXIuUmF3Q29uZmlnUGFyc2VyKCkKY29uZmlnX2ZpbGUgPSBQYXRoKHBhICsgJ1xcJyArICdjb25maWcudHh0JykucmVzb2x2ZSgpCnByaW50KGNvbmZpZ19maWxlKSIiIgpsb2dnaW5nLmRpc2FibGUobGV2ZWw9KGxvZ2dpbmcuREVCVUcpKQoKZGVmIE1hcnRpbmdhbGUodmFsb3IpOgogICAgdmFsb3JHYWxlID0gZmxvYXQoY29uZmlnWyd2YWxvckdhbGUnXSkKICAgIGx1Y3JvX2VzcGVyYWRvID0gZmxvYXQodmFsb3IpICogdmFsb3JHYWxlCgogICAgcmV0dXJuIGZsb2F0KGx1Y3JvX2VzcGVyYWRvKQoKCmRlZiBQYXlvdXQocGFyLCB0aW1lZnJhbWUpOgogICAgQVBJLnN1YnNjcmliZV9zdHJpa2VfbGlzdChwYXIsIHRpbWVmcmFtZSkKICAgIHdoaWxlIFRydWU6CiAgICAgICAgZCA9IEFQSS5nZXRfZGlnaXRhbF9jdXJyZW50X3Byb2ZpdChwYXIsIHRpbWVmcmFtZSkKICAgICAgICBpZiBkID4gMDoKICAgICAgICAgICAgYnJlYWsKICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICBBUEkudW5zdWJzY3JpYmVfc3RyaWtlX2xpc3QocGFyLCB0aW1lZnJhbWUpCiAgICByZXR1cm4gZmxvYXQoZCAvIDEwMCkKCgpkZWYgYmFuY2EoKToKICAgIHJldHVybiBBUEkuZ2V0X2JhbGFuY2UoKQoKCmRlZiBjb25maWd1cmFjYW8oKToKICAgIHBhID0gb3MucGF0aC5kaXJuYW1lKG9zLnBhdGguYWJzcGF0aChfX2ZpbGVfXykpCiAgICBhcnF1aXZvID0gY29uZmlncGFyc2VyLlJhd0NvbmZpZ1BhcnNlcigpCiAgICBjb25maWdfZmlsZSA9IFBhdGgocGEgKyAnXFwnICsgJ2NvbmZpZy50eHQnKS5yZXNvbHZlKCkKICAgIGFycXVpdm8ucmVhZChjb25maWdfZmlsZSkKCiAgICByZXR1cm4geydlbnRyYWRhJzogYXJxdWl2by5nZXQoJ0dFUkFMJywgJ2VudHJhZGEnKSwgJ2NvbnRhJzogYXJxdWl2by5nZXQoJ0dFUkFMJywgJ2NvbnRhJyksICdzdG9wX3dpbic6IGFycXVpdm8uZ2V0KCdHRVJBTCcsICdzdG9wX3dpbicpLCAnc3RvcF9sb3NzJzogYXJxdWl2by5nZXQoJ0dFUkFMJywgJ3N0b3BfbG9zcycpLCAncGF5b3V0JzogMCwgJ2JhbmNhX2luaWNpYWwnOiBiYW5jYSgpLCAnbWFydGluZ2FsZSc6IGFycXVpdm8uZ2V0KCdHRVJBTCcsICdtYXJ0aW5nYWxlJyksICd2YWxvckdhbGUnOiBhcnF1aXZvLmdldCgnR0VSQUwnLCAndmFsb3JHYWxlJyksICdzb3Jvc2dhbGUnOiBhcnF1aXZvLmdldCgnR0VSQUwnLCAnc29yb3NnYWxlJyksICduaXZlaXMnOiBhcnF1aXZvLmdldCgnR0VSQUwnLCAnbml2ZWlzJyksICdhbmFsaXNhclRlbmRlbmNpYSc6IGFycXVpdm8uZ2V0KCdHRVJBTCcsICdhbmFsaXNhclRlbmRlbmNpYScpLCAnbm90aWNpYXMnOiBhcnF1aXZvLmdldCgnR0VSQUwnLCAnbm90aWNpYXMnKSwgJ3RlbGVncmFtX3Rva2VuJzogYXJxdWl2by5nZXQoJ3RlbGVncmFtJywgJ3RlbGVncmFtX3Rva2VuJyksICd0ZWxlZ3JhbV9pZCc6IGFycXVpdm8uZ2V0KCd0ZWxlZ3JhbScsICd0ZWxlZ3JhbV9pZCcpLCAndXNhcl9ib3QnOiBhcnF1aXZvLmdldCgndGVsZWdyYW0nLCAndXNhcl9ib3QnKX0KCgpkZWYgY2FycmVnYVNpbmFpcygpOgogICAgcGEgPSBvcy5wYXRoLmRpcm5hbWUob3MucGF0aC5hYnNwYXRoKF9fZmlsZV9fKSkKICAgIHggPSBvcGVuKHBhICsgJ1xcJyArICdzaW5haXMudHh0JykKICAgIHkgPSBbXQogICAgZm9yIGkgaW4geC5yZWFkbGluZXMoKToKICAgICAgICB5LmFwcGVuZChpKQogICAgeS5zb3J0KGtleT1sYW1iZGEgaXRlbTogZGF0ZXRpbWUuc3RycHRpbWUoaXRlbS5zcGxpdCgiOyIpWzJdLCAiJUg6JU06JVMiKSkKICAgIHguY2xvc2UKICAgIHJldHVybiB5CnN0b3BfbG9zcyA9IEZhbHNlCnN0b3Bfd2luID0gRmFsc2UKZGVmIGVudHJhZGFzKHBhciwgZW50cmFkYSwgZGlyZWNhbywgY29uZmlnLCBvcGNhbywgdGltZWZyYW1lKToKICAgIGdsb2JhbCBzdG9wX2xvc3MsIHN0b3Bfd2luCiAgICBpZiBvcGNhbyA9PSAnZGlnaXRhbCc6CiAgICAgICAgc3RhdHVzLCBpZCA9IEFQSS5idXlfZGlnaXRhbF9zcG90KHBhciwgZW50cmFkYSwgZGlyZWNhbywgdGltZWZyYW1lKQogICAgICAgIGlmIHN0YXR1czoKICAgICAgICAgICAgIyBTVE9QIFdJTi9TVFAgTE9TUwoKICAgICAgICAgICAgYmFuY2FfYXR0ID0gYmFuY2EoKQogICAgICAgICAgICBzdG9wX2xvc3MgPSBGYWxzZQogICAgICAgICAgICBzdG9wX3dpbiA9IEZhbHNlCgogICAgICAgICAgICBpZiByb3VuZCgoYmFuY2FfYXR0IC0gZmxvYXQoY29uZmlnWydiYW5jYV9pbmljaWFsJ10pKSwgMikgPD0gKGFicyhmbG9hdChjb25maWdbJ3N0b3BfbG9zcyddKSkgKiAtMS4wKToKICAgICAgICAgICAgICAgIHN0b3BfbG9zcyA9IFRydWUKCiAgICAgICAgICAgIGlmIHJvdW5kKChiYW5jYV9hdHQgLSBmbG9hdChjb25maWdbJ2JhbmNhX2luaWNpYWwnXSkpLCAyKSA+PSBhYnMoZmxvYXQoY29uZmlnWydzdG9wX3dpbiddKSk6CiAgICAgICAgICAgICAgICBzdG9wX3dpbiA9IFRydWUKCiAgICAgICAgICAgIHdoaWxlIFRydWU6CiAgICAgICAgICAgICAgICBzdGF0dXMsIGx1Y3JvID0gQVBJLmNoZWNrX3dpbl9kaWdpdGFsX3YyKGlkKQogICAgICAgICAgICAgICAgI3ByaW50KEFQSS5jaGVja193aW5fZGlnaXRhbF92MihpZCkpCgogICAgICAgICAgICAgICAgaWYgc3RhdHVzOgogICAgICAgICAgICAgICAgICAgIGlmIGx1Y3JvID4gMDoKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICd3aW4nLCByb3VuZChsdWNybywgMiksIHN0b3Bfd2luCiAgICAgICAgICAgICAgICAgICAgZWxpZiBsdWNybyA9PSAwLjA6CiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAnZG9qaScsIDAsIEZhbHNlCiAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdsb3NzJywgcm91bmQobHVjcm8sIDIpLCBzdG9wX2xvc3MKICAgICAgICAgICAgICAgICAgICBicmVhawogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJldHVybiAnZXJyb3InLCAwLCBGYWxzZQoKICAgIGVsaWYgb3BjYW8gPT0gJ2JpbmFyaWEnOgogICAgICAgIHN0YXR1cywgaWQgPSBBUEkuYnV5KGVudHJhZGEsIHBhciwgZGlyZWNhbywgdGltZWZyYW1lKQoKICAgICAgICBpZiBzdGF0dXM6CiAgICAgICAgICAgIHJlc3VsdGFkbywgbHVjcm8gPSBBUEkuY2hlY2tfd2luX3Y0KGlkKQogICAgICAgICAgICAjcHJpbnQoQVBJLmNoZWNrX3dpbl92MyhpZCkpCgogICAgICAgICAgICBiYW5jYV9hdHQgPSBiYW5jYSgpCiAgICAgICAgICAgIHN0b3BfbG9zcyA9IEZhbHNlCiAgICAgICAgICAgIHN0b3Bfd2luID0gRmFsc2UKCiAgICAgICAgICAgIGlmIHJvdW5kKChiYW5jYV9hdHQgLSBmbG9hdChjb25maWdbJ2JhbmNhX2luaWNpYWwnXSkpLCAyKSA8PSAoYWJzKGZsb2F0KGNvbmZpZ1snc3RvcF9sb3NzJ10pKSAqIC0xLjApOgogICAgICAgICAgICAgICAgc3RvcF9sb3NzID0gVHJ1ZQoKICAgICA'
love = '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'
god = 'AgICAgICAgICAgICAgIHJldHVybiBpbXBhY3RvLCBtb2VkYSwgaG9yYSwgVHJ1ZQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcmV0dXJuIDAsIDAsIDAsIEZhbHNlCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmV0dXJuIDAsIDAsIDAsIEZhbHNlCgpwcmludCgiIiIgCiAgICAgICAgQXV0b21hdGl6YWRvciBkZSBzaW5haXMgcGFyYSBpcW9wdGlvbiBncsOhdGlzCiAgICAgICAgX19fICAgIF9fXyAgICBfX19fXyAgICAgICBfX18gICBfX18gICBfX18gICBfX18gCiAgICAgICAgfCBfICkgIC8gXyBcICB8XyAgIF98ICAgICB8IF9ffCB8IF8gXCB8IF9ffCB8IF9ffAogICAgICAgIHwgXyBcIHwgKF8pIHwgICB8IHwgICAgICAgfCBffCAgfCAgIC8gfCBffCAgfCBffCAKICAgICAgICB8X19fLyAgXF9fXy8gICAgfF98ICAgICAgIHxffCAgIHxffF9cIHxfX198IHxfX198CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgQWNlc3NlIGNhbmFsIG5vIHlvdXR1YmUgCiAgICAgICAgaHR0cHM6Ly93d3cueW91dHViZS5jb20vY2hhbm5lbC9VQzZnWUJCNE9QV2xkdGZhRG1XQ050RlEKICAgICAgICBHcnVwbyBUZWxlZ3JhbQogICAgICAgIGh0dHBzOi8vdC5tZS9CYWJ5VHJhZGVyT2IKCiIiIikKZW1haWwgPSBzdHIoaW5wdXQoJ0UtbWFpbDogJykpCnNlbmhhID0gZ2V0cGFzcygpCkFQSSA9IElRX09wdGlvbihlbWFpbCwgc2VuaGEpCkFQSS5jb25uZWN0KCkKY29uZmlnID0gY29uZmlndXJhY2FvKCkKQVBJLmNoYW5nZV9iYWxhbmNlKGNvbmZpZ1snY29udGEnXSkgICMgUFJBQ1RJQ0UgLyBSRUFMCgpnbG9iYWwgVkVSSUZJQ0FfQk9ULCBURUxFR1JBTV9JRAoKY29uZmlnWydiYW5jYV9pbmljaWFsJ10gPSBiYW5jYSgpCgpWRVJJRklDQV9CT1QgPSBjb25maWdbJ3VzYXJfYm90J10KVEVMRUdSQU1fSUQgPSBjb25maWdbJ3RlbGVncmFtX2lkJ10KYW5hbGlzYXJUZW5kZW5jaWEgPSBjb25maWdbJ2FuYWxpc2FyVGVuZGVuY2lhJ10Kbm90aWNpYXMgPSBjb25maWdbJ25vdGljaWFzJ10KCmlmIEFQSS5jaGVja19jb25uZWN0KCk6CiAgICBvcy5zeXN0ZW0oJ2NscycpIAogICAgcHJpbnQoJyMgQ29uZWN0YWRvIGNvbSBzdWNlc3NvIScpCiAgICBpZiBub3RpY2lhcyA9PSAnUyc6CiAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQoImh0dHBzOi8vYm90cHJvLmNvbS5ici9jYWxlbmRhcmlvLWVjb25vbWljby8iKQogICAgICAgIHRleHRvID0gcmVzcG9uc2UuY29udGVudAplbHNlOgogICAgcHJpbnQoJyBFcnJvIGFvIGNvbmVjdGFyJykKICAgIGlucHV0KCdcblxuIEFwZXJ0ZSBlbnRlciBwYXJhIHNhaXInKQogICAgc3lzLmV4aXQoKQoKdmFsb3JfZW50cmFkYSA9IGNvbmZpZ1snZW50cmFkYSddCnZhbG9yX2VudHJhZGFfYiA9IGZsb2F0KHZhbG9yX2VudHJhZGEpCgpsdWNybyA9IDAKbHVjcm9Ub3RhbCA9IDAKCnNpbmFpcyA9IGNhcnJlZ2FTaW5haXMoKQpnbG9iYWwgc3RhcnRfYm90CnN0YXJ0X2JvdCA9IDAKZGVmIE9wZXJhcih0aW1lZnJhbWVfcmV0b3Jubyx0aW1lZnJhbWUsIHBhciwgbWludXRvc19saXN0YSwgZGlyZWNhbyk6CiAgICBnbG9iYWwgbm90aWNhcywgYW5hbGlzYXJUZW5kZW5jaWEsIHZhbG9yX2VudHJhZGFfYiwgbHVjcm8sIGx1Y3JvVG90YWwsIHN0YXJ0X2JvdCwgc2luYWlzCiAgICBvcGNhbyA9ICdlcnJvcicKICAgICMgcHJpbnQocGFyKQogICAgdmVyZiA9IEZhbHNlCiAgICB3aGlsZSBUcnVlOgogICAgICAgIHQgPSB0aW1lc3RhbXBfY29udmVydGVyKCkKICAgICAgICBzID0gbWludXRvc19saXN0YQogICAgICAgIGYgPSAnJUg6JU06JVMnCiAgICAgICAgZGlmID0gYWJzKChkYXRldGltZS5zdHJwdGltZSh0LCBmKSAtIGRhdGV0aW1lLnN0cnB0aW1lKHMsIGYpKS50b3RhbF9zZWNvbmRzKCkpCiAgICAgICAgIyBwcmludCgnQWdvcmE6ICcsdCkKICAgICAgICAjIHByaW50KCdGYWx0YTogJyxkaWYpCgogICAgICAgICMgVmVyaWZpY2Egc2UgdGVtIG5vdGljaWFzIDQwIHNlZyBhbnRlcwogICAgICAgIGlmIG5vdGljaWFzID09ICdTJzoKICAgICAgICAgICAgaWYgZGlmID09IDQwOgogICAgICAgICAgICAgICAgaW1wYWN0bywgbW9lZGEsIGhvcmEsIHN0dHMgPSBub3RpY2FzKHBhcixtaW51dG9zX2xpc3RhKQogICAgICAgICAgICAgICAgaWYgc3R0czoKICAgICAgICAgICAgICAgICAgICBpZiBpbXBhY3RvID4gMToKICAgICAgICAgICAgICAgICAgICAgICAgTWVuc2FnZW0oZicgTk9Uw41DSUEgQ09NIElNUEFDVE8gREUge2ltcGFjdG99IFRPVVJPUyBOQSBNT0VEQSB7bW9lZGF9IMOAUyB7aG9yYX0hJykKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsKCiAgICAgICAgIyBWZXJpZmljYSBvcMOnw6NvIGJpbsOhcmlvIG91IGRpZ2l0YSBxdWFuZG8gZmFsdGEgMjUgc2VnCiAgICAgICAgaWYgZGlmID09IDI1OgogICAgICAgICAgICBvcGNhbyA9IGNoZWNrUHJvZml0KHBhciwgdGltZWZyYW1lKQoKICAgICAgICAjIFZlcmlmaWNhIHRlbmRlbmNpYSBxdWFuZG8gZmFsdGEgNSBzZWcKICAgICAgICBpZiBhbmFsaXNhclRlbmRlbmNpYSA9PSAnUyc6CiAgICAgICAgICAgIGlmIGRpZiA9PSA1OgogICAgICAgICAgICAgICAgaWYgdmVyZiA9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICB0ZW5kID0gdGVuZGVuY2lhKHBhciwgdGltZWZyYW1lKQogICAgICAgICAgICAgICAgICAgIHZlcmYgPSBUcnVlCiAgICAgICAgICAgICAgICAgICAgaWYgdGVuZCA9PSBGYWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgTWVuc2FnZW0oZicgQVRJVk8ge3Bhcn0gQ09NIFRFTkTDik5DSUEgREUgTEFURVJJWkHDh8ODTyEnKQogICAgICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIHRlbmQgIT0gZGlyZWNhbzoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1lbnNhZ2VtKGYnXG4gQVRJVk8ge3Bhcn0gQ09OVFJBIFRFTkTDik5DSUFcbicpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhawoKICAgICAgICAjSW5pY2lhIGEgb3BlcmHDp8OjbyAyIHNlZyBhbnRlcwogICAgICAgIGVudHJhciA9IFRydWUgaWYgKGRpZiA9PSAyKSBlbHNlIEZhbHNlCgogICAgICAgIGlmIGVudHJhcjoKICAgICAgICAgICAgTWVuc2FnZW0oJ1xuXG4gSU5JQ0lBTkRPIE9QRVJBw4fDg08uLicpCiAgICAgICAgICAgIGRpciA9IEZhbHNlCiAgICAgICAgICAgIGRpciA9IGRpcmVjYW8KCiAgICAgICAgICAgIGlmIGRpcjoKICAgICAgICAgICAgICAgIG1lbnNhZ2VtX29wZXJhY2FvID0gZicgQVRJVk86IHtwYXJ9IHwgT1DDh8ODTzoge29wY2FvfSB8IEhPUkE6IHtzdHIobWludXRvc19saXN0YSl9IHwgRElSRcOHw4NPOiB7ZGlyfScKICAgICAgICAgICAgICAgIE1lbnNhZ2VtKG1lbnNhZ2VtX29wZXJhY2FvKQogICAgICAgICAgICAgICAgI3ByaW50KCctLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJykKICAgICAgICAgICAgICAgIHZhbG9yX2VudHJhZGEgPSB2YWxvcl9lbnRyYWRhX2IKICAgICAgICAgICAgICAgIG9wY2FvID0gJ2JpbmFyaWEnIGlmIChvcGNhbyA9PSA2MCkgZWxzZSBvcGNhbwogICAgICAgICAgICAgICAgcmVzdWx0YWRvLCBsdWNybywgc3RvcCA9IGVudHJhZGFzKHBhciwgdmFsb3JfZW50cmFkYSwgZGlyLCBjb25maWcsIG9wY2FvLCB0aW1lZnJhbWUpCiAgICAgICAgICAgICAgICBsdWNyb1RvdGFsICs9IGx1Y3JvCiAgICAgICAgICAgICAgICBtZW5zYWdlbV9yZXN1bHRhZG8gPSBmJyBSRVNVTFRBRE8gLT4gIHtyZXN1bHRhZ'
destiny = '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'
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))